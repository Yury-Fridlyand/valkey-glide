name: C# tests

on:
    push:
        branches: ["main"]
        paths:
            - csharp/**
            - glide-core/src/**
            - submodules/**
            - .github/workflows/csharp.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    pull_request:
        paths:
            - csharp/**
            - glide-core/src/**
            - submodules/**
            - .github/workflows/csharp.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    workflow_dispatch:
    workflow_call:
        inputs:
            full-matrix:
                required: true
                type: boolean

permissions:
    contents: read

concurrency:
    group: C#-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    load-engine-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.load-engine-matrix.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Load the engine matrix
              id: load-engine-matrix
              shell: bash
              run: echo "matrix=$(jq -c . < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT

    run-tests:
        needs: load-engine-matrix
        timeout-minutes: 25
        strategy:
            fail-fast: false
            matrix:
                engine: ${{ fromJson(needs.load-engine-matrix.outputs.matrix) }}
                dotnet:
                    # - '6.0'
                    - "8.0"
                host:
                    - {
                          OS: ubuntu,
                          RUNNER: ubuntu-latest,
                          TARGET: x86_64-unknown-linux-gnu,
                      }
                    # - {
                    #     OS: macos,
                    #     RUNNER: macos-latest,
                    #     TARGET: aarch64-apple-darwin
                    # }

        runs-on: ${{ matrix.host.RUNNER }}

        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
