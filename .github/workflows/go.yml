name: Go CI

on:
    push:
        branches: [ "main" ]
        paths:
            - glide-core/src/**
            - submodules/**
            - go/**
            - .github/workflows/go.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    pull_request:
        paths:
            - glide-core/src/**
            - submodules/**
            - go/**
            - .github/workflows/go.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
            - .github/json_matrices/build-matrix.json
    workflow_dispatch:
    workflow_call:

concurrency:
    group: go-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    load-engine-matrix:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.load-engine-matrix.outputs.matrix }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Load the engine matrix
            id: load-engine-matrix
            shell: bash
            run: echo "matrix=$(jq -c . < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT

    build-and-test-go-client:
        needs: load-engine-matrix
        timeout-minutes: 35
        strategy:
            # Run all jobs
            fail-fast: false
            matrix:
                go:
                    - '1.22.0'
                engine: ${{ fromJson(needs.load-engine-matrix.outputs.matrix) }}
                host:
                  - {
                    OS: ubuntu,
                    RUNNER: ubuntu-latest,
                    TARGET: x86_64-unknown-linux-gnu
                  }
                  # - {
                  #   OS: macos,
                  #   RUNNER: macos-latest,
                  #   TARGET: aarch64-apple-darwin
                  # }

        runs-on: ${{ matrix.host.RUNNER }}

        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

 